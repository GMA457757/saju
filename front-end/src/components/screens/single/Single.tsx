import { FC, useEffect, useState } from 'react'

import Catalog from '@/components/ui/catalog/Catalog'

import {
	IProduct,
	IProductItem,
	IProductOption
} from '@/types/product.interface'

import ProductAdditionalDetails from './additional-details/ProductAdditionalDetails'
import ProductActions from './product-actions/ProductActions'
import ProductDetails from './product-details/ProductDetails'
import ProductColors from './product-options/ProductColors'
import ProductSizes from './product-options/ProductSizes'
import ProductImages from './single-images/ProductImages'

interface ISingle {
	product: IProduct
	releatedPosts: IProductItem[]
}

const Single: FC<ISingle> = ({ product, releatedPosts }) => {
	// ? Bu iÅŸlÉ™m default olaraq productun birinci optionun seÃ§ir vÉ™ sizÉ™ false olaraq dÉ™yiÅŸilir ondan ptrÃ¼ ki, istifadÉ™Ã§i rÉ™ngi Ã¶zÃ¼ seÃ§sin. Bu zaman add to cart la baÄŸlÄ± problem Ã§Ä±xÄ±r option olmayanda productlarda default olaraq empty vÉ™ ya false gÉ™ldiyi Ã¼Ã§Ã¼n carta É™lavÉ™ etmÉ™k olmur vÉ™ burada yoxlaÅŸ edilir É™gÉ™r optionlar sayÄ± 1 dÉ™n bÃ¶yÃ¼ksÉ™ false et yoxsa default oalraq seÃ§ ki add to cart iÅŸlÉ™sin
	const productFirstOption: IProductOption =
		product.productOptions.length > 1
			? { ...product.productOptions[0], size: false }
			: { ...product.productOptions[0], size: 'default' }

	const [selectedOption, setSelectedoption] = useState(productFirstOption)

	useEffect(() => {
		setSelectedoption(productFirstOption)
	}, [product])

	return (
		<>
			<section className='container grid grid-cols-7 gap-x-5'>
				<ProductImages images={selectedOption.images} />

				<div className='flex flex-col col-span-3 gap-y-7'>
					<ProductDetails product={product} selectedOption={selectedOption} />

					<ProductColors
						productOptions={product.productOptions}
						selectedOption={selectedOption}
						setSelectedoption={setSelectedoption}
					/>

					<ProductSizes
						productOptions={product.productOptions}
						selectedOption={selectedOption}
						setSelectedoption={setSelectedoption}
					/>

					<ProductActions
						product={product}
						selectedOption={selectedOption}
						setSelectedoption={() => setSelectedoption(productFirstOption)}
					/>

					<ProductAdditionalDetails product={product} />
				</div>
			</section>

			{/* // Todo : if releated post not found show last 4 post from backend */}
			{releatedPosts.length !== 0 && (
				<Catalog
					products={releatedPosts}
					heading='BÉ™nzÉ™r mÉ™hsullar'
					description='Ä°stifadÉ™Ã§ilÉ™r tÉ™rÉ™findÉ™n Ã§ox sevilÉ™n mÉ™hsullar ðŸ’Ž'
				/>
			)}
		</>
	)
}

export default Single

// ! 160 Line code
